import{p as ye,aa as he,i as l,a7 as pe,au as ce,w as E,x as ge,k as N,t as O,X as p,b as P,d as ke,ab as be,h as G,ac as c,y as k,g as e,z as b}from"./iframe-DyWuGZgA.js";import{e as me,i as ve}from"./each-BdKYQQNe.js";import{s as n}from"./attributes-DesoiSbl.js";import{s as H}from"./class-B9SFUanI.js";import{s as q}from"./style-CNURdi_Z.js";import{b as we}from"./this-D8r0RiQE.js";import{i as _e}from"./lifecycle-BV4teSqg.js";import{u as m}from"./urbanColors-BkxYcPwH.js";import{g as xe,r as d,a as Fe,b as Se,c as B,d as M}from"./lib-ByG-hXMu.js";var Ve=N("<path></path>"),Le=N("<g></g>");function je(R,i){ye(i,!1);const[f,D]=be(),v=()=>c(I,"$projection",f),w=()=>c(T,"$transform",f),U=()=>c(J,"$globalFeatures",f),z=()=>c(Q,"$stickyHighlight",f),_=b(),{projection:I,features:J,transform:T,handleLayerClick:X,handleLayerMousemove:K,stickyHighlight:Q}=he("map");let Y=l(i,"fill",24,()=>m.blue),x=l(i,"hoverFill",8,void 0),Z=l(i,"naFill",24,()=>m.gray_shade_light),F=l(i,"stroke",24,()=>m.white),S=l(i,"hoverStroke",8,void 0),V=l(i,"strokeWidth",8,.5),$=l(i,"hoverStrokeWidth",8,void 0),ee=l(i,"features",8,void 0),te=l(i,"pointerEvents",8,!0),ie=l(i,"ariaRole",8,void 0),y=l(i,"ariaLabel",8,void 0),ae=l(i,"highlightFeature",8,void 0),L=l(i,"tooltip",8,!1);const h=pe();let g=b(),s=b();function le(t){return typeof y()=="string"||typeof y()>"u"?y():y()(t)}function oe(t,a){d(t.target),e(s)&&d(e(s)),L()&&K(M(t,a)),h("mousemove",{e:t,props:a.properties})}function se(t,a){d(t.target),e(s)&&d(e(s)),L()&&X(M(t,a)),h("click",{e:t,props:a.properties})}ce(()=>{k(s,e(g).querySelector("path.highlight"))}),E(()=>v(),()=>{k(_,xe(v()))}),E(()=>(e(s),d),()=>{e(s)&&d(e(s))}),ge(),_e();var r=Le();let j,A;me(r,5,()=>ee()||U(),ve,(t,a)=>{var o=Ve();let C,W;O((u,re,ne,de,ue,fe)=>{C=H(o,0,"polygon-feature svelte-1yh1yiv",null,C,u),n(o,"role",ie()),n(o,"label",re),n(o,"fill",ne),n(o,"stroke",de),n(o,"stroke-width",V()/w().k),n(o,"d",ue),W=q(o,"",W,{"--hover-stroke":fe})},[()=>({highlight:Fe(e(a),z(),ae())}),()=>le(e(a)),()=>Se(e(a),Y(),Z()),()=>B(e(a),F()),()=>e(_)(e(a)),()=>S()||B(e(a),F())],G),p("mousemove",o,u=>oe(u,e(a))),p("mousedown",o,u=>se(u,e(a))),P(t,o)}),we(r,t=>k(g,t),()=>e(g)),O(t=>{j=H(r,0,"map-layer polygon-layer svelte-1yh1yiv",null,j,t),A=q(r,"",A,{"--hover-fill":x()||null,"--hover-stroke":S()||null,"--hover-stroke-width":`${($()||V())/w().k}px`,"pointe-events":te()?"auto":"none"})},[()=>({"hover-fill":x()})],G),p("mouseout",r,t=>h("mouseout")),p("blur",r,t=>h("mouseout")),P(R,r),ke(),D()}je.__docgen={data:[{name:"fill",visibility:"public",description:`A color string or a function that takes a feature and returns a color string. Use in combination with a D3 scale for a dynamic color encoding.
[fill = urbanColors.blue] A string or function that returns a string to use as this layers fill color.`,keywords:[],kind:"let",type:{kind:"function",text:"(Object: any) => string"},static:!1,readonly:!1,defaultValue:"..."},{name:"hoverFill",visibility:"public",description:"Optional color to use for a feature's fill when hovered",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1},{name:"naFill",visibility:"public",description:"Color to use for values that are NA or otherwise undefined in the color scale",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:"..."},{name:"stroke",visibility:"public",description:`A color string or a function that takes a feature and returns a color string
[fill = urbanColors.blue] A string or function that returns a string to use as this layers stroke color.`,keywords:[],kind:"let",type:{kind:"function",text:"(Object: any) => string"},static:!1,readonly:!1,defaultValue:"..."},{name:"hoverStroke",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"other",text:"undefined"},static:!1,readonly:!1},{name:"strokeWidth",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0.5"},{name:"hoverStrokeWidth",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"other",text:"undefined"},static:!1,readonly:!1},{name:"features",visibility:"public",description:"A list of GeoJSON features. By default this component will render the features set in the parent SVGMap, but if `features` is defined, it plots those instead.\n[features]",keywords:[],kind:"let",type:{kind:"type",type:"array",text:"any[]"},static:!1,readonly:!1},{name:"pointerEvents",visibility:"public",description:`Boolean that determines if this layer should respond to pointer events and dispatch events.
[pointerEvents]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"true"},{name:"ariaRole",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"other",text:"undefined"},static:!1,readonly:!1},{name:"ariaLabel",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"other",text:"undefined"},static:!1,readonly:!1},{name:"highlightFeature",visibility:"public",description:"Optional object that will be compared with each `feature` displayed in the layer. If all of the key/value pairs in `highlightFeature` are equal to the properties of a given `feature`, set that `feature` to a highlighted state.",keywords:[],kind:"let",type:{kind:"type",type:"object",text:"{ string: any; }"},static:!1,readonly:!1},{name:"tooltip",visibility:"public",description:`Boolean that determines if this layer should populate the tooltip slot when interacted with.
[tooltip = false]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"}],name:"SVGPolygonLayer.svelte"};export{je as S};

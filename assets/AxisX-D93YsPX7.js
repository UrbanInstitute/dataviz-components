import{p as oe,aa as ce,i as o,w as X,x as de,k,B as v,t as f,b as y,d as fe,ab as ye,c as m,h as S,s as g,g as i,z,y as D,ac as _,q as ke,e as E}from"./iframe-D_iF5c85.js";import{e as ue}from"./each-B1oKFb8M.js";import{s as t}from"./attributes-BlXGg7Yy.js";import{s as H}from"./class-B9SFUanI.js";import{i as pe}from"./lifecycle-DPT9lhMs.js";var be=k('<line class="gridline svelte-1f0s80k" y2="0" x1="0" x2="0"></line>'),xe=k('<line class="tick-mark svelte-1f0s80k"></line>'),he=k('<g><!><!><text dx="" dy="" class="svelte-1f0s80k"> </text></g>'),ve=k('<line class="baseline svelte-1f0s80k" x1="0"></line>'),me=k('<text class="axis-label svelte-1f0s80k" dy="-4" text-anchor="middle"> </text>'),ge=k("<g><!><!><!></g>");function _e(G,s){oe(s,!1);const[u,J]=ye(),n=()=>_(P,"$xScale",u),K=()=>_(Q,"$yRange",u),p=()=>_(O,"$height",u),I=()=>_(N,"$width",u),c=z(),w=z(),{width:N,height:O,xScale:P,yRange:Q}=ce("LayerCake");let U=o(s,"gridlines",8,!1),W=o(s,"tickMarks",8,!0),Y=o(s,"baseline",8,!0),L=o(s,"snapTicks",8,!1),Z=o(s,"formatTick",8,e=>e),d=o(s,"ticks",8,void 0),M=o(s,"xTick",8,0),$=o(s,"yTick",8,16),F=o(s,"axisLabel",8,"");function ee(e){if(L()===!0){if(e===0)return"start";if(e===i(w).length-1)return"end"}return"middle"}X(()=>n(),()=>{D(c,typeof n().bandwidth=="function")}),X(()=>(ke(d()),i(c),n()),()=>{D(w,Array.isArray(d())?d():i(c)?n().domain():typeof d()=="function"?d()(n().ticks()):n().ticks(d()))}),de(),pe();var T=ge();let R;var j=m(T);ue(j,3,()=>i(w),e=>e,(e,a,b)=>{var x=he(),B=m(x);{var se=r=>{var l=be();f(()=>t(l,"y1",p()*-1)),y(r,l)};v(B,r=>{U()!==!1&&r(se)})}var C=g(B);{var ne=r=>{var l=xe();t(l,"y1",0),t(l,"y2",6),f((V,A)=>{t(l,"x1",V),t(l,"x2",A)},[()=>i(c)?n().bandwidth()/2:0,()=>i(c)?n().bandwidth()/2:0],S),y(r,l)};v(C,r=>{W()===!0&&r(ne)})}var h=g(C),le=m(h);f((r,l,V,A,re)=>{H(x,0,`tick tick-${i(b)??""}`,"svelte-1f0s80k"),t(x,"transform",`translate(${r??""},${l??""})`),t(h,"x",V),t(h,"y",$()),t(h,"text-anchor",A),E(le,re)},[()=>n()(i(a)),()=>Math.max(...K()),()=>i(c)?n().bandwidth()/2+M():M(),()=>ee(i(b)),()=>Z()(i(a))],S),y(e,x)});var q=g(j);{var te=e=>{var a=ve();f(()=>{t(a,"y1",p()+.5),t(a,"y2",p()+.5),t(a,"x2",I())}),y(e,a)};v(q,e=>{Y()===!0&&e(te)})}var ae=g(q);{var ie=e=>{var a=me();t(a,"fill","#000");var b=m(a);f(()=>{t(a,"x",I()/2),t(a,"y",p()+40),E(b,F())}),y(e,a)};v(ae,e=>{F()&&e(ie)})}f(e=>R=H(T,0,"axis x-axis svelte-1f0s80k",null,R,e),[()=>({snapTicks:L()})],S),y(G,T),fe(),J()}_e.__docgen={data:[{name:"gridlines",visibility:"public",description:`Extend lines from the ticks into the chart space
[gridlines=true]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"tickMarks",visibility:"public",description:`Show a vertical mark for each tick.
[tickMarks=false]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"true"},{name:"baseline",visibility:"public",description:`Show a solid line at the bottom.
[baseline=false]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"true"},{name:"snapTicks",visibility:"public",description:`Instead of centering the text on the first and the last items, align them to the edges of the chart.
[snapTicks=false]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"formatTick",visibility:"public",description:`A function that passes the current tick value and expects a nicely formatted value in return.
[formatTick=d => d]`,keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Function"},static:!1,readonly:!1,defaultValue:"function"},{name:"ticks",visibility:"public",description:`If this is a number, it passes that along to the [d3Scale.ticks](https://github.com/d3/d3-scale) function. If this is an array, hardcodes the ticks to those values. If it's a function, passes along the default tick values and expects an array of tick values in return. If nothing, it uses the default ticks supplied by the D3 function.
[ticks]`,keywords:[],kind:"let",type:{kind:"union",type:[{kind:"type",type:"number",text:"number"},{kind:"type",type:"object",text:"Function"},{kind:"type",type:"array",text:"any[]"}],text:"number | Function | any[]"},static:!1,readonly:!1},{name:"xTick",visibility:"public",description:`How far over to position the text marker.
[xTick=0]`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0"},{name:"yTick",visibility:"public",description:`The distance from the baseline to place each tick value.
[yTick=16]`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"16"},{name:"axisLabel",visibility:"public",description:`An optional label for the y axis
[axisLabel=null]`,keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'}],name:"AxisX.svelte"};export{_e as A};

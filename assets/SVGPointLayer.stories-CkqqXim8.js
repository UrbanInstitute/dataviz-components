import{p as _,U as v,g as h,h as g,d as G,V}from"./iframe-DyWuGZgA.js";import{i as b}from"./lifecycle-BV4teSqg.js";import{b as s}from"./misc-ayKpQMgR.js";import{S as w}from"./lib-ByG-hXMu.js";import{S as d}from"./SVGPointLayer-CiOwajAy.js";import{c as L,d as P}from"./create-runtime-stories-fMtdXIcw.js";import{s as k}from"./states_geo-DARvmaCd.js";import{u as n}from"./urbanColors-BkxYcPwH.js";import"./attributes-DesoiSbl.js";import"./attributes-q36Eg1F8.js";import"./class-B9SFUanI.js";import"./style-CNURdi_Z.js";import"./size-to7WvB4c.js";import"./this-D8r0RiQE.js";import"./string-BqOgh9tw.js";import"./Tooltip-DutJ-3tE.js";import"./html-CkGiA2O7.js";import"./window-B5sk1FDb.js";import"./each-BdKYQQNe.js";const H='A layer that works inside an `SVGMap` component that displays data as a point/symbol layer. If polygon features are passed to this layer, the centroid will be computed with `d3.geoPath.centroid`.\n\n## Basic usage\n\nImport `SVGPointLayer` and `SVGMap` from this library:\n\n```js\nimport { SVGMap, SVGPointLayer } from "@urbaninstitute/dataviz-components/maps";\n```\n\nAdd your own GeoJSON data and specify configuration and props seen below.\n',{userEvent:i,expect:l,fn:m}=__STORYBOOK_MODULE_TEST__,M={title:"Maps/SVGPointLayer",component:d,tags:["autodocs"],argTypes:{features:{control:"array"},fill:{control:"text"},stroke:{control:"text"}},parameters:{docs:{description:{component:H}},githubLink:{url:"/maps/SVGPointLayer/SVGPointLayer.svelte"}}},{Story:x}=P();function f(S,o){_(o,!1);let p=m(),u=m(),c=m();b();const y=g(()=>({features:k.features,stroke:n.blue_shade_darker,fill:n.blue,hoverFill:n.magenta}));x(S,{name:"simple",get args(){return h(y)},play:async({canvasElement:a,args:r})=>{const e=a.querySelector(".point-feature");await i.hover(e),await l(p).toHaveBeenCalled(),await i.unhover(e),await l(u).toHaveBeenCalled(),await i.click(e),await l(c).toHaveBeenCalled()},template:(a,r=v)=>{w(a,{get features(){return r().features},children:(e,B)=>{d(e,V(r,{$$events:{click:[function(t){s.call(this,o,t)},c],mouseout:[function(t){s.call(this,o,t)},u],mousemove:[function(t){s.call(this,o,t)},p]}}))},$$slots:{default:!0}})},$$slots:{template:!0},parameters:{__svelteCsf:{rawCode:`<SVGMap features={args.features}>
  <SVGPointLayer
    {...args}
    on:click
    on:mouseout
    on:mousemove
    on:click={clickHandler}
    on:mouseout={mouseoutHandler}
    on:mousemove={mousemoveHandler}
  ></SVGPointLayer>
</SVGMap>`}}}),G()}f.__docgen={data:[],name:"SVGPointLayer.stories.svelte"};const C=L(f,M),Z=["Simple"],ee={...C.Simple,tags:["svelte-csf-v5"]};export{ee as Simple,Z as __namedExportsOrder,M as default};

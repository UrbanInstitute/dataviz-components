import{p as y,_ as v,g as h,h as g,d as G,a0 as V}from"./iframe-BcferWuU.js";import{i as b}from"./lifecycle-BcSUtK95.js";import{b as s}from"./misc-Axxag6g7.js";import{S as w}from"./lib-Bn4Zx1sO.js";import{S as d}from"./SVGPointLayer-DlTJGiaY.js";import{c as k,d as L}from"./create-runtime-stories-CHM6HO4D.js";import{s as P}from"./states_geo-DARvmaCd.js";import{u as n}from"./urbanColors-BkxYcPwH.js";import"./attributes-1snxx-6i.js";import"./attributes-q36Eg1F8.js";import"./class-B9SFUanI.js";import"./style-CNURdi_Z.js";import"./string-D6zLExca.js";import"./this-XyIzL1DC.js";import"./Tooltip-CvVxsiFy.js";import"./html-D3p32zG5.js";import"./window-SIeXCKpW.js";import"./each-CZjc6dyk.js";const H='A layer that works inside an `SVGMap` component that displays data as a point/symbol layer. If polygon features are passed to this layer, the centroid will be computed with `d3.geoPath.centroid`.\n\n## Basic usage\n\nImport `SVGPointLayer` and `SVGMap` from this library:\n\n```js\nimport { SVGMap, SVGPointLayer } from "@urbaninstitute/dataviz-components/maps";\n```\n\nAdd your own GeoJSON data and specify configuration and props seen below.\n',{userEvent:i,expect:l,fn:m}=__STORYBOOK_MODULE_TEST__,M={title:"Maps/SVGPointLayer",component:d,tags:["autodocs"],argTypes:{features:{control:"array"},fill:{control:"text"},stroke:{control:"text"}},parameters:{docs:{description:{component:H}},githubLink:{url:"/maps/SVGPointLayer/SVGPointLayer.svelte"}}},{Story:x}=L();function f(S,o){y(o,!1);let p=m(),u=m(),c=m();b();const _=g(()=>({features:P.features,stroke:n.blue_shade_darker,fill:n.blue,hoverFill:n.magenta}));x(S,{name:"simple",get args(){return h(_)},play:async({canvasElement:a,args:r})=>{const e=a.querySelector(".point-feature");await i.hover(e),await l(p).toHaveBeenCalled(),await i.unhover(e),await l(u).toHaveBeenCalled(),await i.click(e),await l(c).toHaveBeenCalled()},template:(a,r=v)=>{w(a,{get features(){return r().features},children:(e,B)=>{d(e,V(r,{$$events:{click:[function(t){s.call(this,o,t)},c],mouseout:[function(t){s.call(this,o,t)},u],mousemove:[function(t){s.call(this,o,t)},p]}}))},$$slots:{default:!0}})},$$slots:{template:!0},parameters:{__svelteCsf:{rawCode:`<SVGMap features={args.features}>
	<SVGPointLayer {...args} on:click on:mouseout on:mousemove on:click={clickHandler} on:mouseout={mouseoutHandler} on:mousemove={mousemoveHandler} />
</SVGMap>`}}}),G()}f.__docgen={data:[],name:"SVGPointLayer.stories.svelte"};const C=k(f,M),X=["Simple"],Z={...C.Simple,tags:["svelte-csf-v5"]};export{Z as Simple,X as __namedExportsOrder,M as default};

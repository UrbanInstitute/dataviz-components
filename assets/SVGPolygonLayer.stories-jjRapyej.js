import{p as w,f as k,a as L,n as P,i as d,k as f,s as C,b,d as $,V as x}from"./iframe-BjxEKEQH.js";import{c as O,d as W}from"./create-runtime-stories-HPq0r60h.js";import{i as E}from"./lifecycle-hO6jUP98.js";import{c as F,S as B}from"./lib-CgGEPiW4.js";import{S as v}from"./SVGPolygonLayer-BgMp1_rr.js";import{s as g}from"./states_geo-DARvmaCd.js";import{u as a}from"./urbanColors-BkxYcPwH.js";import"./attributes-UJeNkN1P.js";import"./attributes-q36Eg1F8.js";import"./class-B9SFUanI.js";import"./style-CNURdi_Z.js";import"./size-C1syiTDZ.js";import"./this-DGLcOT4Q.js";import"./string-BqOgh9tw.js";import"./Tooltip-DQtD7qmK.js";import"./html-CDri68dQ.js";import"./window-C-tkelu3.js";import"./each-DC_8OmU5.js";const T='A polygon layer for use in an `<SVGMap>` component. Renders each `feature` as an svg `path` element, leveraging d3\'s geoPath function. If no `features` are passed directly to this layer, it will render the features of the parent `SVGMap` component.\n\n## Usage\n\n```svelte\n<script>\n  import { SVGMap, SVGPolygonLayer } from "@urbaninstitute/dataviz-components/maps";\n  import states from "./path/to/geojson/states.json";\n<\/script>\n\n<SVGMap features={states.features}>\n  <SVGPolygonLayer />\n</SVGMap>\n```\n',{userEvent:r,expect:s,fn:n}=__STORYBOOK_MODULE_TEST__,A={title:"Maps/SVGPolygonLayer",component:v,tags:["autodocs"],argTypes:{features:{control:"array"},fill:{control:"text"},stroke:{control:"number"}},parameters:{docs:{description:{component:T}},githubLink:{url:"/maps/SVGPolygonLayer/SVGPolygonLayer.svelte"}}},{Story:h}=W();var I=k("<!> <!>",1);function S(_,G){w(G,!1);const i=(t,o=P)=>{B(t,{get features(){return o().features},children:(e,R)=>{v(e,x(o,{get onclick(){return m},get onmouseout(){return p},get onmousemove(){return l}}))},$$slots:{default:!0}})};let l=n(),p=n(),m=n();F(),E();var u=I(),c=L(u);const V=f(()=>({features:g.features,fill:a.blue}));h(c,{name:"Simple",get args(){return d(V)},get template(){return i},play:async({canvasElement:t,args:o})=>{const e=t.querySelector(".polygon-feature");await r.hover(e),await s(l).toHaveBeenCalled(),await r.unhover(e),await s(p).toHaveBeenCalled(),await r.click(e),await s(m).toHaveBeenCalled()},parameters:{docs:{description:{story:"A generative AI model wrote or edited portions of this file with the supervision of a human developer and careful human review."}},__svelteCsf:{rawCode:`<SVGMap features={args.features}>
  <SVGPolygonLayer
    {...args}
    onclick={clickHandler}
    onmouseout={mouseoutHandler}
    onmousemove={mousemoveHandler}
  />
</SVGMap>`}}});var H=C(c,2);const M=f(()=>({features:g.features,fill:a.blue,hoverStroke:a.yellow,hoverStrokeWidth:3,highlightFeature:{GEOID:"06"}}));h(H,{name:"With highlighted feature",get template(){return i},get args(){return d(M)},parameters:{__svelteCsf:{rawCode:`<SVGMap features={args.features}>
  <SVGPolygonLayer
    {...args}
    onclick={clickHandler}
    onmouseout={mouseoutHandler}
    onmousemove={mousemoveHandler}
  />
</SVGMap>`}}}),b(_,u),$()}S.__docgen={data:[],name:"SVGPolygonLayer.stories.svelte"};const y=O(S,A),ne=["Simple","WithHighlightedFeature"],ie={...y.Simple,tags:["svelte-csf-v5"]},le={...y.WithHighlightedFeature,tags:["svelte-csf-v5"]};export{ie as Simple,le as WithHighlightedFeature,ne as __namedExportsOrder,A as default};

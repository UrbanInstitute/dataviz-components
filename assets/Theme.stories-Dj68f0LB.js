import{S as $,i as g,s as _,c as m,a as l,m as i,t as p,b as f,d as u}from"./index-lamZ5WrB.js";import{s as y,c as T,i as w,d as b}from"./lifecycle-BNS46k4e.js";import{T as h}from"./Theme-BawX-Xjl.js";import{p as v,T as A,S as C}from"./collect-stories-D1soPxiK.js";function D(s){let t,n;return t=new h({}),{c(){m(t.$$.fragment)},l(a){l(t.$$.fragment,a)},m(a,o){i(t,a,o),n=!0},i(a){n||(p(t.$$.fragment,a),n=!0)},o(a){f(t.$$.fragment,a),n=!1},d(a){u(t,a)}}}function S(s){let t,n,a,o;return t=new A({props:{$$slots:{default:[D,({args:e})=>({0:e}),({args:e})=>e?1:0]},$$scope:{ctx:s}}}),a=new C({props:{name:"Default"}}),{c(){m(t.$$.fragment),n=y(),m(a.$$.fragment)},l(e){l(t.$$.fragment,e),n=T(e),l(a.$$.fragment,e)},m(e,r){i(t,e,r),w(e,n,r),i(a,e,r),o=!0},p(e,[r]){const c={};r&2&&(c.$$scope={dirty:r,ctx:e}),t.$set(c)},i(e){o||(p(t.$$.fragment,e),p(a.$$.fragment,e),o=!0)},o(e){f(t.$$.fragment,e),f(a.$$.fragment,e),o=!1},d(e){e&&b(n),u(t,e),u(a,e)}}}const x={title:"Theming/Theme",description:"A theme wrapper that provides styles for children components.",component:h,argTypes:{theme:{default:"urban",options:["urban"],control:"select"},slot_default:{control:{type:"text"}}},parameters:{backgrounds:{default:"light",values:[{name:"light",value:"#ffffff"},{name:"dark",value:"#0A4C6A"}]},docs:{description:{component:"A theme wrapper that provides styles for children components. All of the components in this library rely on CSS provided by this <Theme> component. If you are working on a project that depends on this library, you should probably wrap your entire page inside of a `<Theme></Theme>`. If you are pulling in just a component or two to a project that otherwise doesn't use this library, you'll want to wrap those components directly in a `<Theme>`.\n\n```html\n<Theme>\n  <ChildComponent />\n  <ChildComponent />\n</Theme>\n```"}}}};class j extends ${constructor(t){super(),g(this,t,null,S,_,{})}}const d=v(j,{meta:{title:"Theming/Theme"},stories:{"tpl:default":{name:"default",template:!0,source:"<Theme/>",hasArgs:!0},Default:{name:"Default",template:!1,source:"",hasArgs:!1}},allocatedIds:["default","Story","Template"]},x),M=d.meta,O=["Default"],z=d.stories.Default;export{z as Default,O as __namedExportsOrder,M as default};

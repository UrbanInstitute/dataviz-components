import{S as T,i as z,s as S,c as u,a as g,m as h,t as _,b as v,d as $,l as y}from"./index-DSboKh2c.js";import{s as b,c as D,i as w,d,e as A,t as C,a as H,b as q,g as E,l as M,m as j,n as c}from"./lifecycle-SLBqfn5_.js";import{g as L,a as O}from"./spread-CgU5AtxT.js";import{D as k}from"./DatawrapperIframe-BZnOH9Bw.js";import{p as P,T as R,S as U}from"./collect-stories-C9w2Zg6J.js";function X(n){let t,s,r,i,e;const o=[n[8]];let m={};for(let a=0;a<o.length;a+=1)m=y(m,o[a]);return t=new k({props:m}),t.$on("regionclick",n[1]),t.$on("regionmouseenter",n[2]),t.$on("regionmouseleave",n[3]),t.$on("regionclick",n[4]),t.$on("regionmouseenter",n[5]),t.$on("regionmouseleave",n[6]),t.$on("visrendered",n[7]),{c(){u(t.$$.fragment),s=b(),r=A("p"),i=C(n[0])},l(a){g(t.$$.fragment,a),s=D(a),r=H(a,"P",{});var l=q(r);i=E(l,n[0]),l.forEach(d)},m(a,l){h(t,a,l),w(a,s,l),w(a,r,l),M(r,i),e=!0},p(a,l){const f=l&256?L(o,[O(a[8])]):{};t.$set(f),(!e||l&1)&&j(i,a[0])},i(a){e||(_(t.$$.fragment,a),e=!0)},o(a){v(t.$$.fragment,a),e=!1},d(a){a&&(d(s),d(r)),$(t,a)}}}function B(n){let t,s,r,i;return t=new R({props:{$$slots:{default:[X,({args:e})=>({8:e}),({args:e})=>e?256:0]},$$scope:{ctx:n}}}),r=new U({props:{name:"Default",args:{title:"This is a title for the visualization",ariaLabel:"This is an accessible title for the visualization",datawrapperId:"RMnkX"}}}),{c(){u(t.$$.fragment),s=b(),u(r.$$.fragment)},l(e){g(t.$$.fragment,e),s=D(e),g(r.$$.fragment,e)},m(e,o){h(t,e,o),w(e,s,o),h(r,e,o),i=!0},p(e,[o]){const m={};o&769&&(m.$$scope={dirty:o,ctx:e}),t.$set(m)},i(e){i||(_(t.$$.fragment,e),_(r.$$.fragment,e),i=!0)},o(e){v(t.$$.fragment,e),v(r.$$.fragment,e),i=!1},d(e){e&&d(s),$(t,e),$(r,e)}}}const F={title:"Components/DatawrapperIframe",description:"Datawrapper iframe",component:k,tags:["autodocs"],parameters:{docs:{description:{component:"Datawrapper iframe with <a href='https://developer.datawrapper.de/docs/listening-to-chart-interaction-events' target='_blank'>event dispatching</a> enabled. All interaction events are accessible via <code>on:eventname</code> (<b>no periods</b>) on the `DatawrapperIframe` Svelte component itself.<br/><br/>The complete event list and associated descriptions can be found <a href='https://developer.datawrapper.de/docs/listening-to-chart-interaction-events#visualization-events' target='_blank'>here</a>.<br/><br/>In April 2024, the <code>vis.rendered</code> event was added to the Datawrapper event list (per the Urban team's request) in order to track when a visualization had been rendered/painted on the page. This is useful if there is a longer loading visualization (like a large map) and you'd like to indicate to the user that the visualization is still loading."}}}};function G(n,t,s){let r;function i(p){c.call(this,n,p)}function e(p){c.call(this,n,p)}function o(p){c.call(this,n,p)}const m=p=>s(0,r=p.detail.data.fips),a=p=>s(0,r=p.detail.data.fips),l=()=>s(0,r="Hover over a region to change this text");function f(p){c.call(this,n,p)}return s(0,r="Hover over a region to change this text"),[r,i,e,o,m,a,l,f]}class J extends T{constructor(t){super(),z(this,t,G,B,S,{})}}const I=P(J,{meta:{title:"Components/DatawrapperIframe",tags:["autodocs"]},stories:{"tpl:default":{name:"default",template:!0,source:`<DatawrapperIframe
  {...args}
  on:regionclick
  on:regionmouseenter
  on:regionmouseleave
  on:regionclick={(e) => (test = e.detail.data.fips)}
  on:regionmouseenter={(e) => (test = e.detail.data.fips)}
  on:regionmouseleave={() => (test = "Hover over a region to change this text")}
  on:visrendered
/>
<p>{test}</p>`,hasArgs:!0},Default:{name:"Default",template:!1,source:"",hasArgs:!1}},allocatedIds:["default","Story","Template"]},F),Y=I.meta,Z=["Default"],x=I.stories.Default;export{x as Default,Z as __namedExportsOrder,Y as default};

import{S as I,i as S,s as T,c as u,a as d,m as g,t as _,b as h,d as $,k as y}from"./index-NH8Ck0Ec.js";import{s as w,c as b,i as v,d as c,b as z,t as A,f as C,n as H,a as E,k as M,p as j,l as f}from"./lifecycle-C5c7P8Xl.js";import{g as q,a as L}from"./spread-CgU5AtxT.js";import{D}from"./DatawrapperIframe-BE01wKOk.js";import{p as O,T as P,S as R}from"./collect-stories-FKbactFq.js";function X(n){let t,s,r,i,e;const o=[n[7]];let m={};for(let a=0;a<o.length;a+=1)m=y(m,o[a]);return t=new D({props:m}),t.$on("regionclick",n[1]),t.$on("regionmouseenter",n[2]),t.$on("regionmouseleave",n[3]),t.$on("regionclick",n[4]),t.$on("regionmouseenter",n[5]),t.$on("regionmouseleave",n[6]),{c(){u(t.$$.fragment),s=w(),r=z("p"),i=A(n[0])},l(a){d(t.$$.fragment,a),s=b(a),r=C(a,"P",{});var p=H(r);i=E(p,n[0]),p.forEach(c)},m(a,p){g(t,a,p),v(a,s,p),v(a,r,p),M(r,i),e=!0},p(a,p){const l=p&128?q(o,[L(a[7])]):{};t.$set(l),(!e||p&1)&&j(i,a[0])},i(a){e||(_(t.$$.fragment,a),e=!0)},o(a){h(t.$$.fragment,a),e=!1},d(a){a&&(c(s),c(r)),$(t,a)}}}function B(n){let t,s,r,i;return t=new P({props:{$$slots:{default:[X,({args:e})=>({7:e}),({args:e})=>e?128:0]},$$scope:{ctx:n}}}),r=new R({props:{name:"Default",args:{title:"This is a title for the visualization",ariaLabel:"This is an accessible title for the visualization",datawrapperId:"RMnkX"}}}),{c(){u(t.$$.fragment),s=w(),u(r.$$.fragment)},l(e){d(t.$$.fragment,e),s=b(e),d(r.$$.fragment,e)},m(e,o){g(t,e,o),v(e,s,o),g(r,e,o),i=!0},p(e,[o]){const m={};o&385&&(m.$$scope={dirty:o,ctx:e}),t.$set(m)},i(e){i||(_(t.$$.fragment,e),_(r.$$.fragment,e),i=!0)},o(e){h(t.$$.fragment,e),h(r.$$.fragment,e),i=!1},d(e){e&&c(s),$(t,e),$(r,e)}}}const F={title:"Components/DatawrapperIframe",description:"Datawrapper iframe",component:D,tags:["autodocs"],parameters:{docs:{description:{component:"Datawrapper iframe with <a href='https://developer.datawrapper.de/docs/listening-to-chart-interaction-events' target='_blank'>event dispatching</a> enabled. All interaction events are accessible via <code>on:eventname</code> (<b>no periods</b>) on the `DatawrapperIframe` Svelte component itself.<br/><br/>The complete event list and associated descriptions can be found <a href='https://developer.datawrapper.de/docs/listening-to-chart-interaction-events#visualization-events' target='_blank'>here</a>."}}}};function G(n,t,s){let r;function i(l){f.call(this,n,l)}function e(l){f.call(this,n,l)}function o(l){f.call(this,n,l)}const m=l=>s(0,r=l.detail.data.fips),a=l=>s(0,r=l.detail.data.fips),p=()=>s(0,r="Hover over a region to change this text");return s(0,r="Hover over a region to change this text"),[r,i,e,o,m,a,p]}class J extends I{constructor(t){super(),S(this,t,G,B,T,{})}}const k=O(J,{meta:{title:"Components/DatawrapperIframe",tags:["autodocs"]},stories:{"tpl:default":{name:"default",template:!0,source:`<DatawrapperIframe
  {...args}
  on:regionclick
  on:regionmouseenter
  on:regionmouseleave
  on:regionclick={(e) => (test = e.detail.data.fips)}
  on:regionmouseenter={(e) => (test = e.detail.data.fips)}
  on:regionmouseleave={() => (test = "Hover over a region to change this text")}
/>
<p>{test}</p>`,hasArgs:!0},Default:{name:"Default",template:!1,source:"",hasArgs:!1}},allocatedIds:["default","Story","Template"]},F),W=k.meta,Y=["Default"],Z=k.stories.Default;export{Z as Default,Y as __namedExportsOrder,W as default};

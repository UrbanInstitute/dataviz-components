import{p as se,aa as le,i as n,w as I,x as ne,k as x,A as w,t as u,b as p,d as re,ab as de,c as m,s as T,g as t,z as R,y as j,ac as h,q as oe,h as A,e as q}from"./iframe-Bc23XYIh.js";import{e as ce}from"./each-DS5tR5n2.js";import{s as e}from"./attributes-Cxy0te-K.js";import{s as ye}from"./class-B9SFUanI.js";import{s as ke}from"./style-CNURdi_Z.js";import{i as fe}from"./lifecycle-BvYk3ZZi.js";var ue=x('<line class="gridline svelte-xedl6y"></line>'),pe=x('<line class="tick-mark svelte-xedl6y" x1="0"></line>'),xe=x("<g><!><!><text> </text></g>"),be=x('<text class="axis-label svelte-xedl6y" y="0" dy="-8"> </text>'),me=x('<g class="axis y-axis"><!><!></g>');function he(H,a){se(a,!1);const[b,Y]=de(),i=()=>h(J,"$yScale",b),v=()=>h(E,"$padding",b),z=()=>h(G,"$xRange",b),B=()=>h(K,"$width",b),s=R(),V=R(),{padding:E,xRange:G,yScale:J,yDomain:ve,xDomain:ge,xScale:_e,width:K}=le("LayerCake");let N=n(a,"gridlines",8,!0),O=n(a,"tickMarks",8,!1),P=n(a,"formatTick",8,r=>r),y=n(a,"ticks",8,4),Q=n(a,"xTick",8,0),L=n(a,"yTick",8,0),U=n(a,"dxTick",24,()=>-4),W=n(a,"dyTick",8,0),X=n(a,"textAnchor",8,"end"),S=n(a,"tickLabelColor",8,"#000000"),C=n(a,"axisLabel",8,""),Z=n(a,"labelDx",8,0);I(()=>i(),()=>{j(s,typeof i().bandwidth=="function")}),I(()=>(oe(y()),t(s),i()),()=>{j(V,Array.isArray(y())?y():t(s)?i().domain():typeof y()=="function"?y()(i().ticks()):i().ticks(y()))}),ne(),fe();var g=me(),D=m(g);ce(D,1,()=>t(V),r=>r,(r,d)=>{var k=xe(),M=m(k);{var te=o=>{var l=ue();e(l,"x1",0),u((f,_)=>{e(l,"x2",B()),e(l,"y1",f),e(l,"y2",_)},[()=>t(s)?i().bandwidth()/2:0,()=>t(s)?i().bandwidth()/2:0],A),p(o,l)};w(M,o=>{N()!==!1&&o(te)})}var F=T(M);{var ae=o=>{var l=pe();u((f,_)=>{e(l,"x2",t(s)?-6:6),e(l,"y1",f),e(l,"y2",_)},[()=>t(s)?i().bandwidth()/2:0,()=>t(s)?i().bandwidth()/2:0],A),p(o,l)};w(F,o=>{O()===!0&&o(ae)})}var c=T(F),ie=m(c);u((o,l,f)=>{ye(k,0,`tick tick-${t(d)??""}`,"svelte-xedl6y"),e(k,"transform",`translate(${z()[0]+v().left}, ${o??""})`),e(c,"x",Q()),e(c,"y",l),e(c,"dx",t(s)?-9:U()),e(c,"dy",t(s)?4:W()),e(c,"fill",S()),ke(c,`text-anchor:${(t(s)?"end":X())??""}; alignment-baseline:middle;`),q(ie,f)},[()=>i()(t(d)),()=>t(s)?i().bandwidth()/2+L():L(),()=>P()(t(d))],A),p(r,k)});var $=T(D);{var ee=r=>{var d=be(),k=m(d);u(()=>{e(d,"x",v().left),e(d,"dx",Z()),e(d,"fill",S()),q(k,C())}),p(r,d)};w($,r=>{C()&&r(ee)})}u(()=>e(g,"transform",`translate(${-v().left}, 0)`)),p(H,g),re(),Y()}he.__docgen={data:[{name:"gridlines",visibility:"public",description:`Extend lines from the ticks into the chart space
[gridlines=true]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"true"},{name:"tickMarks",visibility:"public",description:`Show a vertical mark for each tick.
[tickMarks=false]`,keywords:[],kind:"let",type:{kind:"type",type:"boolean",text:"boolean"},static:!1,readonly:!1,defaultValue:"false"},{name:"formatTick",visibility:"public",description:`A function that passes the current tick value and expects a nicely formatted value in return.
[formatTick=d => d]`,keywords:[],kind:"let",type:{kind:"type",type:"object",text:"Function"},static:!1,readonly:!1,defaultValue:"function"},{name:"ticks",visibility:"public",description:`If this is a number, it passes that along to the [d3Scale.ticks](https://github.com/d3/d3-scale) function. If this is an array, hardcodes the ticks to those values. If it"s a function, passes along the default tick values and expects an array of tick values in return.
[ticks=4]`,keywords:[],kind:"let",type:{kind:"union",type:[{kind:"type",type:"number",text:"number"},{kind:"type",type:"object",text:"Function"},{kind:"type",type:"array",text:"any[]"}],text:"number | Function | any[]"},static:!1,readonly:!1,defaultValue:"4"},{name:"xTick",visibility:"public",description:`How far over to position the text marker.
[xTick=0]`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0"},{name:"yTick",visibility:"public",description:`How far up and down to position the text marker.
[yTick=0]`,keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0"},{name:"dxTick",visibility:"public",description:"Any optional value passed to the `dx` attribute on the text marker and tick mark (if visible). This is ignored on the text marker if your scale is ordinal.\n[dxTick=-4]",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"..."},{name:"dyTick",visibility:"public",description:"Any optional value passed to the `dy` attribute on the text marker and tick mark (if visible). This is ignored on the text marker if your scale is ordinal.\n[dyTick=0]",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0"},{name:"textAnchor",visibility:"public",description:'The CSS `text-anchor` passed to the label. This is automatically set to "end" if the scale has a bandwidth method, like in ordinal scales.\n[textAnchor="end"]',keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"end"'},{name:"tickLabelColor",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'"#000000"'},{name:"axisLabel",visibility:"public",description:`An optional label for the y axis
[axisLabel=null]`,keywords:[],kind:"let",type:{kind:"type",type:"string",text:"string"},static:!1,readonly:!1,defaultValue:'""'},{name:"labelDx",visibility:"public",keywords:[],kind:"let",type:{kind:"type",type:"number",text:"number"},static:!1,readonly:!1,defaultValue:"0"}],name:"AxisY.svelte"};export{he as A};
